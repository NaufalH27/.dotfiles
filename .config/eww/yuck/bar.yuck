

(defwindow bar
            :monitor "eDP-1"
            :geometry (geometry :x "0%" :y "6px" :width "88%" :height "50px" :anchor "top center")
            :stacking "fg"
            :exclusive "true"
  (bar)
)


(defwidget bar []
  (centerbox :class "bar" :orientation "h" 
    (leftside)
    (center)
    (rightside)
    )
  )


;; ---------------------- left side --------------------------------
(defwidget leftside []
  (box :class "leftside" :orientation "h" :space-evenly "false" :spacing 0
     (clocks)
     (music-player)
    
  )
)

(defwidget clocks []
  (box :class "clock"
    (label :text "${time}")
  )
)


(deflisten music_title :initial ""
  "playerctl --follow metadata --format '{{ title }}'"
)

(deflisten music_artist :initial ""
  "playerctl --follow metadata --format '{{ artist }}'"
)

(deflisten music_status :initial ""
  "playerctl --follow metadata --format '{{status}}'"
)

(deflisten music_cover_writer :initial "" 
  "~/.config/eww/scripts/get_music_cover"
)

(deflisten music_cover :initial "" 
 "~/.config/eww/scripts/music_cover_url_listener" 
) 




(defwidget music-player []
  (box :class "music" :orientation "h" :halign "start" :space-evenly "false" :spacing 8
    (box :class "music-cover" :style "background-image: url('${music_cover}');")
    (box :class "music-label" :orientation "v" :halign "start" :space-evenly "false" :spacing -1
      (label  :limit-width 14 :xalign 0 :text "${music_title}")
      (label :class "music-artist" :limit-width 14 :xalign 0 :text "${music_artist}")
      
      
      ;; for triggering music cover url writer, dont remove
      (label :visible false :text "${music_cover_writer}")
    )
    
      (box :class "controller" :halign "end" :hexpand true
        (button :onclick "playerctl previous" "󰒮")
        (button :onclick "playerctl play-pause" "${music_status == "Playing" ? "󰏤" : "󰐊"}" )
        (button :onclick "playerctl next" "󰒭") 
      )
  )
  
)




;; ---------------------- left side --------------------------------









;; ---------------------- center --------------------------------

(defpoll time :interval "10s"
  "date '+%H : %M'")

(defwidget center []
  (box :orientation "h" :space-evenly "false" :spacing 8
     :halign "center"
    (workspaces)
  )
)
(deflisten workspace_event :initial "{ \"max_active\": 6, \"workspace_table\" : [] }" "~/.config/eww/scripts/workspace_event")

(defvar primary_color "#cba6f7")




(defwidget workspace_button [?number id]
    (eventbox :class "workspace-button-eventbox" :onclick "hyprctl dispatch workspace ${id}"
      (box :class "workspace-button"
       :style "${workspace_event.workspace_table[id] == 1 ? "${ id == workspace_event.focused_workspace ? "background-color: ${primary_color}; min-width:40px;" : "background-color : ${primary_color}; " }" : "" }"
      )
    ) 
)






(defwidget workspaces []
  (box  :class "workspaces" :orientation "h" :height 45 :halign "center" :spacing 7 :space-evenly "false" 
    (workspace_button :id 1)
    (workspace_button :id 2)
    (workspace_button :id 3)
    (workspace_button :id 4)
    (workspace_button :id 5)
    (workspace_button :id 6)
  )
  
)


;; ---------------------- center --------------------------------








(deflisten AUDIO :initial "{}" "~/.config/eww/scripts/get_audio" )
(deflisten BRIGHTNESS :initial "{}" "~/.config/eww/scripts/get_brightness" )

(defpoll BATTERY :initial "{}" :interval "2s" ". ~/.config/eww/scripts/get_battery")
(defpoll NETWORK :initial "{}" :interval "2s" ". ~/.config/eww/scripts/get_network")


(defwidget rightside []
    (box :class "rightside" :orientation "h" :halign "end" :space-evenly "false" :spacing 12
      (battery)
      (system-info)
      (notification-center)
    )
)

(defwidget notification-center[]
  (box :class "notification"
    (button "󰂚" )
  )

)


(defwidget banner []
   (box :class "banner"
       (image 
      :path "img-bin/banner/anime-resized.gif"
     )
   )
)



(defvar reveal_volume "false")
(defvar reveal_mic "false")
(defvar reveal_brightness "false")
(defvar reveal_wifi "false")
(defvar reveal_battery "false")

(defwidget system-info []

  (box :class "system-info" :orientation "h" :halign "center" :space-evenly "false" :spacing 6
 
    (eventbox :class "device-event-box" :onhover "${ewwcli} update reveal_volume=true" :onhoverlost "${ewwcli} update reveal_volume=false"
      (box :class "device" :space-evenly "false"
      
        (box :class "wifi" :space-evenly "false"
          (label :text  "${NETWORK.icons}")  
        )  
       (box :class "bluetooth" :space-evenly "false"
          (label :text  "󰂯")  
        )
         (box :class "brightness" :orientation "h" :halign "center" :space-evenly "false" 
          (label :text "${BRIGHTNESS.icons}") 
        ) 
        (box :class "volume" :orientation "h" :halign "center" :space-evenly "false" 
          (label :text "${AUDIO.volume_icons}")    
        ) 
      )
   )
  )
)

(defwidget battery[]
  (eventbox :class "battery-event-box" :onhover "${ewwcli} update reveal_battery=true" :onhoverlost "${ewwcli} update reveal_battery=false"
      (box :class "battery"
        :style "background-image: linear-gradient(90deg, ${primary_color} ${BATTERY.capacity}%, ${primary_color} ${BATTERY.capacity}%, #313244 ${BATTERY.capacity}%, #313244 100%); ${BATTERY.capacity < 45 ? "color: ${primary_color}; text-shadow: 1px 1px 1px #1e1e2e; " : "color: #1e1e2e; text-shadow: 1px 1px 1px ${primary_color};" } ${reveal_battery ? "font-size: 11px" : "font-size:15px"}"
        (label :text "${reveal_battery ? "${BATTERY.status} : ${BATTERY.capacity}%" : "${BATTERY.status == "Discharging" ? "${BATTERY.capacity}%" : "󱐋"}"} ")
      )
    ) 
)




(defwidget metric [label value]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (scale :min 0
           :max 101
           :value value
      )
  )
)


