#!/bin/bash

IMAGE_DIR="$HOME/.config/eww/banner-bin"  

usage() {
    echo "Usage: $0 -p /path/to/image"
    exit 1
}

while getopts "p:" opt; do 
  case $opt in
    p) input_image="$OPTARG";;
    *) usage;;
  esac
done

if [ -z "$input_image" ]; then
    usage
fi

filename=$(basename "$input_image")
extension="${filename##*.}"
filename="${filename%.*}"

echo "Processing image: $filename.$extension"

metadata=$(ffprobe -v error -select_streams v -show_entries stream=width,height -of json "$input_image")
width=$(echo $metadata | jq '.streams[0].width')
height=$(echo $metadata | jq '.streams[0].height')

if [ -z "$width" ] || [ -z "$height" ]; then
    echo "Failed to retrieve image dimensions. Please ensure the file is a valid image and ffmpeg/ffprobe is installed."
    exit 1
fi

w_ratio=135
h_ratio=30
new_height=$(( width / ( w_ratio / h_ratio ) ))

y=$(( (height - new_height) / 2 ))

output_path="${IMAGE_DIR}/${filename}-resized.${extension}"
palette_path="${IMAGE_DIR}/${filename}-palette.png"
temp_dir="${IMAGE_DIR}/temp.${extension}"

case "$extension" in
  jpg|jpeg) 
    codec="mjpeg" 
    quality="-q:v 2"  
    ;;
  png) 
    codec="png" 
    quality="-compression_level 0"  
    ;;
  gif) 
    codec="gif" 
    quality=""
    ;;
  *) 
    echo "Unsupported file format: $extension"
    exit 1
    ;;
esac

if [ "$extension" = "gif" ]; then
    ffmpeg -i "$input_image" -vf "crop=${width}:${new_height}:0:${y},scale=${w_ratio}:${h_ratio}:flags=lanczos,palettegen" -y "$palette_path"
    ffmpeg -i "$input_image" -i "$palette_path" -lavfi "crop=${width}:${new_height}:0:${y},scale=${w_ratio}:${h_ratio}:flags=lanczos [x]; [x][1:v] paletteuse" -y "$output_path"
    rm -f "$palette_path"
else
    ffmpeg -i "$input_image" -filter:v "crop=${width}:${new_height}:0:${y},scale=${w_ratio}:${h_ratio}:flags=lanczos" -c:v "$codec" $quality -y "$output_path"
fi

echo "Processed image saved to: $output_path"

